{"version":3,"sources":["Results.js","Timer.js","Quiz.js","BeginMenu.js","TitleMenu.js","App.js"],"names":["Results","score","console","log","Title","View","style","styles","inner","Text","result","StyleSheet","create","fontSize","color","incorrect","textDecorationLine","textDecorationStyle","container","flex","backgroundColor","alignItems","justifyContent","Timer","useState","Date","updatedTime","timerStarted","setTimerStarted","frame","setFrame","useEffect","intId","setInterval","clearInterval","currentTime","prevTime","undefined","valueOf","timer","String","getMinutes","padStart","getSeconds","questions","title","multipleAnswers","answers","correct","Quiz","setScore","setAnswers","checkAnswer","useCallback","data","qAnswers","answersCorrect","i","length","qCorrect","includes","prevscore","FlatList","renderItem","item","index","Question","showAnswers","prev","onPress","forEach","q","disabled","doSubmit","StatusBar","selectAnswer","filter","push","map","answer","textStyle","checked","onIconPress","BeginMenu","begin","setBegin","TitleMenu","password","setPassword","setchecked","doCheck","intro","TextInput","secureTextEntry","value","onChangeText","text","placeholder","input","innercontainer","maxWidth","height","margin","borderWidth","padding","App"],"mappings":"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","file":"static/js/app.81601fea.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\r\nimport { Text, TextInput, StyleSheet, View} from 'react-native'\r\nimport { Button, Card, CheckBox } from 'react-native-elements';\r\n\r\n\r\nexport default function Results({score})\r\n{\r\n    console.log({score})\r\n        return (<>\r\n        <Card>\r\n            <Card.Title>Quiz Results</Card.Title>\r\n\r\n        <View style = {styles.inner}>\r\n            <Text>Questions Total: 3</Text>\r\n       <Text> Final Score: <Text style = {styles.result}>{score}</Text> </Text>\r\n\r\n        </View>\r\n        </Card>\r\n        \r\n        \r\n        </>)\r\n}\r\nconst styles = StyleSheet.create({\r\n   inner:{\r\n    fontSize:25\r\n   },\r\n    result:{\r\n        color:\"blue\",\r\n        fontSize: 25\r\n    },\r\n    incorrect:{\r\n      textDecorationLine: \"line-through\",\r\n      textDecorationStyle: \"solid\"\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });\r\n","import { useState, useEffect } from 'react';\r\nimport { Text,StyleSheet } from 'react-native'\r\n\r\n\r\nexport default function Timer()\r\n{\r\n    \r\n    let [updatedTime, setStartTime] = useState(new Date())\r\n    let [timerStarted, setTimerStarted] = useState(false)\r\n    let [frame, setFrame] = useState(0)\r\n    \r\n    useEffect(() => {\r\n        \r\n        setTimerStarted(true)\r\n        let intId = \r\n            setInterval(() => {\r\n                if (timerStarted)\r\n                {\r\n                setFrame(frame => frame + 1)\r\n                console.log(\"Every Frame Duration: \" + frame)\r\n                }\r\n            }, \r\n           1000/ 30)\r\n           return () => clearInterval(intId)\r\n        })\r\n        let currentTime = new Date()\r\n    let prevTime = undefined\r\n\r\n    if (timerStarted == true) {\r\n        prevTime = new Date(currentTime.valueOf() - updatedTime.valueOf())\r\n    }\r\n    else {\r\n        prevTime = updatedTime\r\n    }\r\n    return (\r\n        <>\r\n            <Text style = {styles.timer}>Time Taken: {String(prevTime.getMinutes()).padStart(2,'0')}:{String(prevTime.getSeconds()).padStart(2,'0')} </Text>\r\n        </>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    timer:{\r\n     fontSize:22,\r\n     color: 'green'\r\n    }\r\n     \r\n   });","import { StatusBar } from 'expo-status-bar';\r\nimport { useCallback, useState } from 'react';\r\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\r\nimport { Button, Card, CheckBox } from 'react-native-elements';\r\nimport Results from './Results';\r\nimport Timer from './Timer';\r\n\r\n\r\n\r\nlet questions = [\r\n  {\r\n    title: \"Question 1\",\r\n    multipleAnswers: true,\r\n    answers: [\r\n      { correct: false, title: \"Answer 1\" },\r\n      { correct: true, title: \"Answer 2\" },\r\n      { correct: true, title: \"Answer 3\" },\r\n      { correct: true, title: \"Answer 4\" },\r\n    ]\r\n  },\r\n  {\r\n    title: \"Question 2\",\r\n    answers: [\r\n      { correct: false, title: \"Answer A\" },\r\n      { correct: false, title: \"Answer B\" },\r\n      { correct: false, title: \"Answer C\" },\r\n      { correct: true, title: \"Answer D\" },\r\n    ]\r\n  },\r\n  {\r\n    title: \"Question 3\",\r\n    answers: [\r\n      { correct: true, title: \"Answer A\" },\r\n      { correct: false, title: \"Answer B\" },\r\n      { correct: false, title: \"Answer C\" },\r\n      { correct: false, title: \"Answer D\" },\r\n    ]\r\n  },\r\n\r\n\r\n\r\n\r\n]\r\nexport default function Quiz() {\r\n  let [score, setScore] = useState()\r\n  let [menu, setMenu] = useState(\"\")\r\n  let [answers, setAnswers] = useState([])\r\n  let checkAnswer = useCallback((data, qAnswers) => {\r\n    let answersCorrect = true;\r\n    for (let i = 0; i < data.answers.length; i++) {\r\n      let qCorrect\r\n      if (data.answers[i].correct) {\r\n        qCorrect = qAnswers.includes(i)\r\n      }\r\n      else {\r\n        console.log(!qAnswers)\r\n        console.log(qAnswers)\r\n        qCorrect = !qAnswers.includes(i)\r\n      }\r\n      answersCorrect = answersCorrect && qCorrect\r\n    }\r\n    if (answersCorrect) {\r\n      console.log(\"Adding 1\")\r\n      setScore(prevscore => {\r\n        if (prevscore !== undefined) {\r\n         prevscore = prevscore + 1\r\n          return prevscore\r\n        }\r\n        else {\r\n          \r\n          return 1\r\n         \r\n        }\r\n      }\r\n      )\r\n\r\n\r\n    }\r\n    else {\r\n      setScore(prevscore => prevscore === undefined ? 0 : prevscore)\r\n      \r\n    }\r\n  }, [answers, score]\r\n  )\r\n  \r\n  return (<>\r\n  \r\n    <View style={styles.container}>\r\n      <Text style = {styles.title}>Quiz Application</Text>\r\n      {score === undefined ? <Timer></Timer> : undefined}\r\n      <FlatList data = {questions} renderItem={({item, index})=>\r\n      <Question showAnswers = {score !== undefined}data={item} key={index} setAnswers={(answers) => \r\n        setAnswers(prev => {\r\n        prev[index] = answers\r\n        return [...prev]\r\n        \r\n      })\r\n     \r\n        } \r\n        answers={answers[index]}\r\n        ></Question>\r\n      }></FlatList>\r\n\r\n      \r\n\r\n      <Button title=\"Submit\" onPress={() => questions.forEach((q, i) => checkAnswer(q, answers[i]))} disabled={answers.length == 0}></Button>\r\n      {score !== undefined ? doSubmit({score}) : undefined}\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  </>)\r\n\r\n}\r\n function doSubmit({score}) {\r\n  return (<><Results score = {score}></Results></>)\r\n}\r\nfunction Question({ data, answers, showAnswers, setAnswers }) {\r\n\r\n  let selectAnswer = useCallback((index) => {\r\n    console.log(\"onPress()\",index, answers);\r\n    if (answers === undefined) {\r\n      answers = []\r\n    }\r\n    if (!answers.includes(index)) {\r\n      answers.push(index);\r\n      setAnswers([...answers])\r\n\r\n    }\r\n    else {\r\n      answers = answers.filter(i => i !== index)\r\n      setAnswers([...answers])\r\n    }\r\n\r\n  }, [answers])\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Title>{data.title}</Card.Title>\r\n        <View>\r\n          {data.answers.map(\r\n            (answer, index) =>\r\n              <CheckBox key={index}\r\n              textStyle = {showAnswers && !answer.correct ? styles.incorrect: undefined}\r\n              checked={answers ? answers.includes(index) : false}\r\n                onIconPress={() => selectAnswer(index)}\r\n                onPress={() => selectAnswer(index)}\r\n\r\n\r\n\r\n\r\n                title={answer.title}></CheckBox>\r\n          )}\r\n\r\n\r\n\r\n\r\n        </View>\r\n      </Card>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title:{\r\nfontSize:25\r\n  },\r\n  incorrect:{\r\n    textDecorationLine: \"line-through\",\r\n    textDecorationStyle: \"solid\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n","import { useCallback, useState } from 'react';\r\nimport { Text, TextInput, StyleSheet, View} from 'react-native'\r\nimport { Button, Card, CheckBox } from 'react-native-elements';\r\nimport Quiz from './Quiz';\r\nexport default function BeginMenu()\r\n{\r\n    let [begin,setBegin] = useState(false)\r\n    if(begin == true)\r\n    {\r\n        return <><Quiz></Quiz></>\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <Card>\r\n        <Card.Title>You're about to take a exam. Click Begin to start the exam</Card.Title>\r\n        <Text>You have unlimited time to complete the exam</Text>\r\n        <Button title = \"Begin\" onPress={() => setBegin(true)}></Button>\r\n   \r\n    </Card>\r\n        </>\r\n        )\r\n}\r\nconst styles = StyleSheet.create({\r\n    inner:{\r\n     fontSize:25\r\n    },\r\n     result:{\r\n         color:\"blue\",\r\n         fontSize: 25\r\n     },\r\n     incorrect:{\r\n       textDecorationLine: \"line-through\",\r\n       textDecorationStyle: \"solid\"\r\n     },\r\n     container: {\r\n       flex: 1,\r\n       backgroundColor: '#fff',\r\n       alignItems: 'center',\r\n       justifyContent: 'center',\r\n     },\r\n   });\r\n ","\r\nimport { useCallback, useState } from 'react';\r\nimport { Text, TextInput, StyleSheet, View} from 'react-native'\r\nimport { Button, Card, CheckBox } from 'react-native-elements';\r\nimport BeginMenu from './BeginMenu';\r\nimport Quiz from './Quiz';\r\nimport Results from './Results';\r\n\r\nexport default function TitleMenu()\r\n{\r\n    let [password, setPassword] = useState(\"\")\r\n    let [checked, setchecked] = useState(false)\r\n    let doCheck = useCallback(() => {\r\n        \r\n        if(password == \"testing\" )\r\n        {\r\n            \r\n            setchecked(true)\r\n        }\r\n\r\n    }\r\n    \r\n    )\r\n    if(checked)\r\n    {\r\n        return <><BeginMenu></BeginMenu></>\r\n    }\r\n    return ( \r\n        <>\r\n        <Card>\r\n\r\n        <View styles = {styles.container}>\r\n    \r\n\r\n    <Text style = {styles.intro}> Welcome, Please have a faculty member enter the schools five digit password to start the Quiz. </Text>\r\n    <TextInput secureTextEntry={true} value={password} onChangeText={text => setPassword(text)} placeholder=\"Password\" style = {styles.input}></TextInput>\r\n        <Button title = \"Submit\" onPress={() => doCheck()}></Button>\r\n        <Text>Password: \"testing\"</Text>\r\n        \r\n        </View>\r\n        </Card>\r\n    </>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    intro:{\r\n    fontSize: 30,\r\n    \r\n    },\r\n    innercontainer:\r\n  {\r\n    maxWidth: 300,\r\n    \r\n    \r\n  },\r\n    input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 3,\r\n        padding: 10,\r\n        fontSize: 20,\r\n        placeholder: 'black',\r\n\r\n    },\r\n    incorrect:{\r\n      textDecorationLine: \"line-through\",\r\n      textDecorationStyle: \"solid\"\r\n    },\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      \r\n    },\r\n  });","import { StatusBar } from 'expo-status-bar';\nimport { useCallback, useState } from 'react';\nimport { StyleSheet} from 'react-native';\nimport TitleMenu from './TitleMenu';\n\n\n\nexport default function App() {\n  \n  return <TitleMenu></TitleMenu>\n}\nconst styles = StyleSheet.create({\n  incorrect:{\n    textDecorationLine: \"line-through\",\n    textDecorationStyle: \"solid\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n"],"sourceRoot":""}